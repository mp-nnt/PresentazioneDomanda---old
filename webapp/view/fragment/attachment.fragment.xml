<core:FragmentDefinition xmlns="sap.m" xmlns:l="sap.ui.layout" xmlns:f="sap.ui.layout.form" xmlns:core="sap.ui.core"
	xmlns:u="sap.ui.unified" xmlns:mvc="sap.ui.core.mvc">
	<UploadCollection id="UploadCollection" maximumFilenameLength="{settings>/maximumFilenameLength}"
		maximumFileSize="{settings>/maximumFileSize}" multiple="true" change="onChange" fileDeleted="onFileDeleted"
		filenameLengthExceed="onFilenameLengthExceed" fileRenamed="onFileRenamed" fileSizeExceed="onFileSizeExceed" fileType="{fileTypes>/selected}"
		selectionChange="onSelectionChange" typeMissmatch="onTypeMissmatch" uploadComplete="onUploadComplete"
		beforeUploadStarts="onBeforeUploadStarts" uploadTerminated="onUploadTerminated" items="{ path: 'file>/items', templateShareable: false }"
		numberOfAttachmentsText="Uploaded" showSeparators="{settings>/showSeparators}" uploadEnabled="{settings>/uploadEnabled}"
		uploadButtonInvisible="{=!${settings>/uploadButtonVisible}}" mode="{settings>/mode}">
		<toolbar>
			<OverflowToolbar id="myId">
				<Title id="attachmentTitle"/>
				<ToolbarSpacer/>
				<Button id="deleteSelectedButton" text="Delete" press="onDeleteSelectedItems" enabled="false" visible="false" type="Transparent"/>
				<ToggleButton id="selectAllButton" text="Select all" press="onSelectAllPress" enabled="false" visible="false" type="Transparent"/>
				<Button id="downloadSelectedButton" icon="sap-icon://download" press="onDownloadSelectedItems" enabled="true" visible="true"
					type="Transparent"/>
				<UploadCollectionToolbarPlaceholder/>
			</OverflowToolbar>
		</toolbar>
		<items>
			<UploadCollectionItem documentId="{file>fileId}" fileName="{file>fileName}" mimeType="{file>fileMimeType}"
				thumbnailUrl="{file>fileThumbnailUrl}" url="{file>fileURL}" enableEdit="{settings>/enableEdit}" enableDelete="{settings>/enableDelete}"
				visibleDelete="{settings>/visibleDelete}" visibleEdit="{settings>/visibleEdit}"
				attributes="{path : 'file>attributes', templateShareable : false}" selected="{file>selected}">
				<attributes>
					<ObjectAttribute title="{file>title}" text="{path : 'file>text', formatter : '.formatAttribute'}" active="{file>active}"
						press="onAttributePress"/>
				</attributes>
			</UploadCollectionItem>
		</items>
	</UploadCollection>
</core:FragmentDefinition>